pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
        IMAGE_NAME = 'yourdockerhubusername/messaging_app'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/YOUR_USERNAME/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    cd messaging_app
                    python3 -m venv $VENV_DIR
                    . $VENV_DIR/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    cd messaging_app
                    . $VENV_DIR/bin/activate
                    pytest --junitxml=report.xml
                '''
            }
        }

        stage('Publish Report') {
            steps {
                junit 'messaging_app/report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('messaging_app') {
                    script {
                        dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        docker push $IMAGE_NAME:$IMAGE_TAG
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'âœ… Build finished'
        }
    }
}
